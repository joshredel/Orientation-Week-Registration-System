<?php

namespace org\fos\proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class orgfosEventProxy extends \org\fos\Event implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    private function _load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    
    public function load()
    {
        $this->_load();
        return parent::load();
    }

    public function faculties()
    {
        $this->_load();
        return parent::faculties();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'eventName', 'category', 'faculty', 'livingStyle', 'description', 'priceBreakdown', 'startDate', 'endDate', 'location', 'registrationOpenDate', 'registrationCloseDate', 'paypalBusiness', 'participantCap', 'hostedBy', 'website', 'email', 'logoFileName', 'customFields', 'acceptedPayments', 'action', 'bursaryNotice', 'id', 'options', 'payments', 'roles', 'checkIns', 'costs', 'parentEvent', 'participants');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}